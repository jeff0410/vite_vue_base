import "./chunk-FGHZAEIK.js";
import {
  createElementBlock,
  createTextVNode,
  openBlock,
  renderSlot
} from "./chunk-QTOSLENL.js";
import {
  normalizeClass,
  toDisplayString
} from "./chunk-EGF7HRYP.js";
import "./chunk-KTZKXPFA.js";

// node_modules/primevue/badge/badge.esm.js
var script = {
  name: "Badge",
  props: {
    value: null,
    severity: null,
    size: null
  },
  computed: {
    containerClass() {
      return this.$slots.default ? "p-overlay-badge" : this.badgeClass;
    },
    badgeClass() {
      return ["p-badge p-component", {
        "p-badge-no-gutter": this.value && String(this.value).length === 1,
        "p-badge-dot": !this.value && !this.$slots.default,
        "p-badge-lg": this.size === "large",
        "p-badge-xl": this.size === "xlarge",
        "p-badge-info": this.severity === "info",
        "p-badge-success": this.severity === "success",
        "p-badge-warning": this.severity === "warning",
        "p-badge-danger": this.severity === "danger"
      }];
    }
  }
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("span", {
    class: normalizeClass($options.badgeClass)
  }, [
    renderSlot(_ctx.$slots, "default", {}, () => [
      createTextVNode(toDisplayString($props.value), 1)
    ])
  ], 2);
}
script.render = render;

// dep:primevue_badge
var primevue_badge_default = script;
export {
  primevue_badge_default as default
};
//# sourceMappingURL=primevue_badge.js.map
