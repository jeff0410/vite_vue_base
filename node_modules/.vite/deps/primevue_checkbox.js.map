{
  "version": 3,
  "sources": ["../../primevue/checkbox/checkbox.esm.js", "dep:primevue_checkbox"],
  "sourcesContent": ["import { ObjectUtils } from 'primevue/utils';\nimport { openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, mergeProps } from 'vue';\n\nvar script = {\n    name: 'Checkbox',\n    inheritAttrs: false,\n    emits: ['click', 'update:modelValue', 'change', 'input'],\n    props: {\n        value: null,\n        modelValue: null,\n        binary: Boolean,\n        class: null,\n        style: null,\n        trueValue: {\n            type: null,\n            default: true\n        },\n        falseValue: {\n            type: null,\n            default: false\n        }\n    },\n    data() {\n        return {\n            focused: false\n        };\n    },\n    methods: {\n        onClick(event) {\n            if (!this.$attrs.disabled) {\n                let newModelValue;\n\n                if (this.binary) {\n                    newModelValue = this.checked ? this.falseValue : this.trueValue;\n                }\n                else {\n                    if (this.checked)\n                        newModelValue = this.modelValue.filter(val => !ObjectUtils.equals(val, this.value));\n                    else\n                        newModelValue = this.modelValue ? [...this.modelValue, this.value] : [this.value];\n                }\n\n                this.$emit('click', event);\n                this.$emit('update:modelValue', newModelValue);\n                this.$emit('change', event);\n                this.$emit('input', newModelValue);\n                this.$refs.input.focus();\n            }\n        },\n        onFocus() {\n            this.focused = true;\n        },\n        onBlur() {\n            this.focused = false;\n        }\n    },\n    computed: {\n        checked() {\n            return this.binary ? this.modelValue === this.trueValue : ObjectUtils.contains(this.value, this.modelValue);\n        },\n        containerClass() {\n            return ['p-checkbox p-component', this.class, {'p-checkbox-checked': this.checked, 'p-checkbox-disabled': this.$attrs.disabled, 'p-checkbox-focused': this.focused}];\n        }\n    }\n};\n\nconst _hoisted_1 = { class: \"p-hidden-accessible\" };\nconst _hoisted_2 = [\"checked\", \"value\"];\nconst _hoisted_3 = [\"aria-checked\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass($options.containerClass),\n    onClick: _cache[2] || (_cache[2] = $event => ($options.onClick($event))),\n    style: normalizeStyle($props.style)\n  }, [\n    createElementVNode(\"div\", _hoisted_1, [\n      createElementVNode(\"input\", mergeProps({\n        ref: \"input\",\n        type: \"checkbox\",\n        checked: $options.checked,\n        value: $props.value\n      }, _ctx.$attrs, {\n        onFocus: _cache[0] || (_cache[0] = (...args) => ($options.onFocus && $options.onFocus(...args))),\n        onBlur: _cache[1] || (_cache[1] = (...args) => ($options.onBlur && $options.onBlur(...args)))\n      }), null, 16, _hoisted_2)\n    ]),\n    createElementVNode(\"div\", {\n      ref: \"box\",\n      class: normalizeClass(['p-checkbox-box', {'p-highlight': $options.checked, 'p-disabled': _ctx.$attrs.disabled, 'p-focus': $data.focused}]),\n      role: \"checkbox\",\n      \"aria-checked\": $options.checked\n    }, [\n      createElementVNode(\"span\", {\n        class: normalizeClass(['p-checkbox-icon', {'pi pi-check': $options.checked}])\n      }, null, 2)\n    ], 10, _hoisted_3)\n  ], 6))\n}\n\nscript.render = render;\n\nexport { script as default };\n", "import d from \"./node_modules/primevue/checkbox/checkbox.esm.js\";export default d;"],
  "mappings": "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",
  "names": []
}
