import {
  ObjectUtils
} from "./chunk-3EIJWYNM.js";
import "./chunk-FGHZAEIK.js";
import {
  createBaseVNode,
  createElementBlock,
  mergeProps,
  openBlock
} from "./chunk-QTOSLENL.js";
import {
  normalizeClass,
  normalizeStyle
} from "./chunk-EGF7HRYP.js";
import "./chunk-KTZKXPFA.js";

// node_modules/primevue/radiobutton/radiobutton.esm.js
var script = {
  name: "RadioButton",
  inheritAttrs: false,
  emits: ["click", "update:modelValue", "change"],
  props: {
    value: null,
    modelValue: null,
    class: null,
    style: null
  },
  data() {
    return {
      focused: false
    };
  },
  methods: {
    onClick(event) {
      if (!this.$attrs.disabled) {
        this.$emit("click", event);
        this.$emit("update:modelValue", this.value);
        this.$refs.input.focus();
        if (!this.checked) {
          this.$emit("change", event);
        }
      }
    },
    onFocus() {
      this.focused = true;
    },
    onBlur() {
      this.focused = false;
    }
  },
  computed: {
    checked() {
      return this.modelValue != null && ObjectUtils.equals(this.modelValue, this.value);
    },
    containerClass() {
      return ["p-radiobutton p-component", this.class, { "p-radiobutton-checked": this.checked, "p-radiobutton-disabled": this.$attrs.disabled, "p-radiobutton-focused": this.focused }];
    }
  }
};
var _hoisted_1 = { class: "p-hidden-accessible" };
var _hoisted_2 = ["checked", "value"];
var _hoisted_3 = ["aria-checked"];
var _hoisted_4 = createBaseVNode("div", { class: "p-radiobutton-icon" }, null, -1);
var _hoisted_5 = [
  _hoisted_4
];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", {
    class: normalizeClass($options.containerClass),
    onClick: _cache[2] || (_cache[2] = ($event) => $options.onClick($event)),
    style: normalizeStyle($props.style)
  }, [
    createBaseVNode("div", _hoisted_1, [
      createBaseVNode("input", mergeProps({
        ref: "input",
        type: "radio",
        checked: $options.checked,
        value: $props.value
      }, _ctx.$attrs, {
        onFocus: _cache[0] || (_cache[0] = (...args) => $options.onFocus && $options.onFocus(...args)),
        onBlur: _cache[1] || (_cache[1] = (...args) => $options.onBlur && $options.onBlur(...args))
      }), null, 16, _hoisted_2)
    ]),
    createBaseVNode("div", {
      ref: "box",
      class: normalizeClass(["p-radiobutton-box", { "p-highlight": $options.checked, "p-disabled": _ctx.$attrs.disabled, "p-focus": $data.focused }]),
      role: "radio",
      "aria-checked": $options.checked
    }, _hoisted_5, 10, _hoisted_3)
  ], 6);
}
script.render = render;

// dep:primevue_radiobutton
var primevue_radiobutton_default = script;
export {
  primevue_radiobutton_default as default
};
//# sourceMappingURL=primevue_radiobutton.js.map
